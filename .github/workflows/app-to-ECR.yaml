name: Build and Push Docker Image To AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout the repository
      - uses: actions/checkout@v4
      
      # 2. Set up JDK 17
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # 3. Grant execute permission for Gradle Wrapper
      - run: chmod +x ./gradlew
      
      # 4. Create application.properties
      - run: echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.properties
      
      # 5. Set up Docker Buildx
      - uses: docker/setup-buildx-action@v3
      
      # 6. Configure AWS credentials
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # 7. Build with Gradle
      - run: ./gradlew clean build
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
      
      # 8. Login to Amazon ECR and Build Docker Image
      - run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t ${{ secrets.ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_PRIVATE_REPOSITORY }}:latest .
      
      # 9. Push Docker Image to Amazon ECR
      - run: |
          docker push ${{ secrets.ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_PRIVATE_REPOSITORY }}:latest