name: Build and Push Docker Image To AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew
      
      # 2. Create application.properties
      - name: Create application.properties
        run: |
          echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.properties
      
      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # 4. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # 5. Build with Gradle
      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
      
      # 6. Login to Amazon ECR
      - name: Login to Amazon ECR (Private)
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      
      # 7. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_PRIVATE_REPOSITORY }}:latest .
      
      # 8. Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_PRIVATE_REPOSITORY }}:latest
